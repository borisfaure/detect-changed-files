name: Test Zig Binary

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        zig-version: ['0.14.1']
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: mlugg/setup-zig@v1
      with:
        version: ${{ matrix.zig-version }}

    - name: Verify Zig installation
      run: zig version

    - name: Cache Zig dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/zig
          zig-cache
        key: ${{ runner.os }}-zig-${{ matrix.zig-version }}-${{ hashFiles('**/build.zig') }}
        restore-keys: |
          ${{ runner.os }}-zig-${{ matrix.zig-version }}-
          ${{ runner.os }}-zig-

    - name: Run Zig tests
      run: zig build test

    - name: Build release binary
      run: zig build -Doptimize=ReleaseFast

    - name: Run integration tests (if present)
      run: |
        if [ -f "integration_test.sh" ]; then
          chmod +x integration_test.sh
          ./integration_test.sh
        fi
      shell: bash

    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.zig-version }}
        path: |
          zig-out/
          test-results/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: mlugg/setup-zig@v1
      with:
        version: '0.14.1'

    - name: Format check
      run: zig fmt --check .

    - name: Build check
      run: zig build check
